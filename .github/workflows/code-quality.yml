name: Python Code Quality
on: [push]
jobs:
  lock_file:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v6
      - run: uv lock --locked
  requirements_files:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v6
      - run: uv export --locked --no-dev --output-file requirements.txt
      - run: |
          if ! git diff --exit-code requirements.txt; then
            echo "::error file=requirements.txt::requirements.txt is out of date. Run 'uv export --locked --no-dev --output-file requirements.txt' locally and commit the changes."
            exit 1
          fi
      - run: uv export --locked --output-file requirements-dev.txt
      - run: |
          if ! git diff --exit-code requirements-dev.txt; then
            echo "::error file=requirements-dev.txt::requirements.txt is out of date. Run 'uv export --locked --output-file requirements-dev.txt' locally and commit the changes."
            exit 1
          fi
  linting:
    runs-on: ubuntu-latest
    needs: [lock_file]
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v6
      - run: uv sync --locked --all-extras --dev
      - run: uv run ruff check .
  formatting:
    runs-on: ubuntu-latest
    needs: [lock_file]
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v6
      - run: uv sync --locked --all-extras --dev
      - run: uv run ruff format --check .
  type_consistency:
    runs-on: ubuntu-latest
    needs: [lock_file]
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v6
      - run: uv sync --locked --all-extras --dev
      - run: uv run pyright .
  tests:
    runs-on: ubuntu-latest
    needs: [lock_file]
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v6
      - run: uv sync --locked --all-extras --dev
      - run: uv run pytest -v --durations=0 --cov --cov-report=xml
      # - name: Upload Coverage to Codecov
      #   uses: codecov/codecov-action@v4
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
  install:
    runs-on: [ubuntu-latest]
    needs: [lock_file]
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v6
      - run: uv sync --locked --all-extras --dev
      - run: uv run --with wdadaptivepy --no-project -- python -c "import wdadaptivepy"
  build:
    runs-on: [ubuntu-latest]
    needs: [lock_file]
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v6
      - run: uv sync --locked --all-extras --dev
      - run: uv build
  docs:
    runs-on: [ubuntu-latest]
    needs: [lock_file]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # sparse-checkout: |
          #   docs
      - uses: astral-sh/setup-uv@v6
      - run: uv sync --locked --all-extras --dev
      - run: uv run mkdocs build
        env:
          MKDOCS_GIT_COMMITTERS_APIKEY: ${{ secrets.MKDOCS_GIT_COMMITTERS_APIKEY }}
